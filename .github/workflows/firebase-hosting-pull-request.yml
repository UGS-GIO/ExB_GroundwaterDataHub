name: Build and Deploy to Firebase Preview
on: pull_request
permissions:
  checks: write
  contents: read
  pull-requests: write
jobs:
  Build-and-Deploy:
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Download Experience Builder
        run: curl -o exb.zip "$(curl -s 'https://downloads.arcgis.com/dms/rest/download/secured/arcgis-experience-builder-1.15.zip?f=json&folder=software%2FExperienceBuilder%2F1.15' | python3 -c "import sys, json; print(json.load(sys.stdin)['url'])")"
      - name: Unzip Experience Builder
        run: unzip -q exb.zip -d exb
      # - name: Copy Custom Widgets
      # run: cp -r widgets/* exb/ArcGISExperienceBuilder/client/your-extensions/widgets
      - name: Copy Custom Themes
        run: cp -r themes/* exb/ArcGISExperienceBuilder/client/your-extensions/themes
      - name: Create App directory
        run: mkdir public && cd public && mkdir apps && cd apps
        working-directory: exb/ArcGISExperienceBuilder/server
      - name: Copy apps
        run: cp -r apps/* exb/ArcGISExperienceBuilder/server/public/apps
      - name: NPM install client folder
        run: npm ci
        working-directory: exb/ArcGISExperienceBuilder/client
      - name: NPM install in server folder
        run: npm ci
        working-directory: exb/ArcGISExperienceBuilder/server
      - name: Build widgets - dev
        run: npm run build:dev
        working-directory: exb/ArcGISExperienceBuilder/client
      - name: Build widgets
        run: npm run build:prod
        working-directory: exb/ArcGISExperienceBuilder/client
      - name: Run download script
        run: |
          node -e "require('./server/src/middlewares/dev/apps/app-download.js').zipApp('0', 'app.zip')"
          ls -la  # This will show where the file is created
        working-directory: exb/ArcGISExperienceBuilder
        env:
          NODE_ENV: production
      - name: Unzip app zip
        run: |
          unzip -o -q app.zip -d app
          chmod -R 777 app
        working-directory: exb/ArcGISExperienceBuilder

      - name: Create analytics script files
        run: |
          # Create the head analytics script file
          cat > /tmp/head_script.txt << EOL
          <!-- Google tag (gtag.js) -->
          <script async src="https://www.googletagmanager.com/gtag/js?id=${GA_ID}"></script>
          <script>
            window.dataLayer = window.dataLayer || [];
            function gtag(){dataLayer.push(arguments);}
            gtag('js', new Date());
          
            gtag('config', '${GA_ID}');
          </script>
          <!-- Google Tag Manager -->
          <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
          new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
          j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
          'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
          })(window,document,'script','dataLayer','${GTM_ID}');</script>
          <!-- End Google Tag Manager -->
          EOL
          
          # Create the body script file
          cat > /tmp/body_script.txt << EOL
          <!-- Google Tag Manager (noscript) -->
          <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=${GTM_ID}"
          height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
          <!-- End Google Tag Manager (noscript) -->
          EOL
        env:
          GTM_ID: ${{ secrets.GTM_ID }}
          GA_ID: ${{ secrets.GA_ID }}
          
      # Create a separate file with our analytics tags injected
      - name: Create custom index.html with analytics
        run: |
          # Find the main index.html
          HTML_FILE=$(find exb/ArcGISExperienceBuilder/app -name "index.html" | head -1)
          echo "Found main HTML file at: $HTML_FILE"
          
          if [ -z "$HTML_FILE" ]; then
            echo "❌ Could not find index.html file"
            exit 1
          fi
          
          # Create temporary directory for our modified files
          mkdir -p /tmp/modified_app
          
          # Copy all files from the app directory to our temp directory
          cp -r exb/ArcGISExperienceBuilder/app/* /tmp/modified_app/
          
          # Get the relative path of the HTML file
          RELATIVE_PATH=${HTML_FILE#exb/ArcGISExperienceBuilder/app/}
          MODIFIED_HTML="/tmp/modified_app/$RELATIVE_PATH"
          
          echo "Creating modified version at: $MODIFIED_HTML"
          
          # Create a simple Node.js script to modify the HTML
          cat > /tmp/modify_html.js << EOL
          const fs = require('fs');
          
          // Read the analytics script files
          const headScript = fs.readFileSync('/tmp/head_script.txt', 'utf8');
          const bodyScript = fs.readFileSync('/tmp/body_script.txt', 'utf8');
          
          // Read the index.html file
          const htmlPath = process.argv[2];
          let html = fs.readFileSync(htmlPath, 'utf8');
          
          // Insert the head script after <head> tag
          html = html.replace('<head>', '<head>' + headScript);
          
          // Insert the body script after <body> tag
          html = html.replace('<body>', '<body>' + bodyScript);
          
          // Write the modified HTML back to the file
          fs.writeFileSync(htmlPath, html);
          
          console.log('✅ Analytics successfully injected');
          EOL
          
          # Run the Node.js script to modify the HTML
          node /tmp/modify_html.js "$MODIFIED_HTML"
          
          # Verify the changes
          if grep -q "${GA_ID}" "$MODIFIED_HTML" && grep -q "${GTM_ID}" "$MODIFIED_HTML"; then
            echo "✅ Analytics successfully added to modified HTML file"
            # Copy the modified files back to the original location
            cp -r /tmp/modified_app/* exb/ArcGISExperienceBuilder/app/
          else
            echo "❌ Failed to add analytics to modified HTML file"
            exit 1
          fi
        env:
          GTM_ID: ${{ secrets.GTM_ID }}
          GA_ID: ${{ secrets.GA_ID }}
          
      # Create a separate file with our analytics tags injected
      - name: Create custom index.html with analytics
        run: |
          # Find the main index.html
          HTML_FILE=$(find exb/ArcGISExperienceBuilder/app -name "index.html" | head -1)
          echo "Found main HTML file at: $HTML_FILE"
          
          if [ -z "$HTML_FILE" ]; then
            echo "❌ Could not find index.html file"
            exit 1
          fi
          
          # Create temporary directory for our modified files
          mkdir -p /tmp/modified_app
          
          # Copy all files from the app directory to our temp directory
          cp -r exb/ArcGISExperienceBuilder/app/* /tmp/modified_app/
          
          # Get the relative path of the HTML file
          RELATIVE_PATH=${HTML_FILE#exb/ArcGISExperienceBuilder/app/}
          MODIFIED_HTML="/tmp/modified_app/$RELATIVE_PATH"
          
          echo "Creating modified version at: $MODIFIED_HTML"
          
          # Create a simple Node.js script to modify the HTML
          cat > /tmp/modify_html.js << EOL
          const fs = require('fs');
          
          // Read the analytics script files
          const headScript = fs.readFileSync('/tmp/head_script.txt', 'utf8');
          const bodyScript = fs.readFileSync('/tmp/body_script.txt', 'utf8');
          
          // Read the index.html file
          const htmlPath = process.argv[2];
          let html = fs.readFileSync(htmlPath, 'utf8');
          
          // Insert the head script after <head> tag
          html = html.replace('<head>', '<head>' + headScript);
          
          // Insert the body script after <body> tag
          html = html.replace('<body>', '<body>' + bodyScript);
          
          // Write the modified HTML back to the file
          fs.writeFileSync(htmlPath, html);
          
          console.log('✅ Analytics successfully injected');
          EOL
          
          # Run the Node.js script to modify the HTML
          node /tmp/modify_html.js "$MODIFIED_HTML"
          
          # Verify the changes
          if grep -q "${GA_ID}" "$MODIFIED_HTML" && grep -q "${GTM_ID}" "$MODIFIED_HTML"; then
            echo "✅ Analytics successfully added to modified HTML file"
            # Copy the modified files back to the original location
            cp -r /tmp/modified_app/* exb/ArcGISExperienceBuilder/app/
          else
            echo "❌ Failed to add analytics to modified HTML file"
            exit 1
          fi
        env:
          GTM_ID: ${{ secrets.GTM_ID }}
          GA_ID: ${{ secrets.GA_ID }}

      - name: Deploy to Firebase Preview Channel
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_UT_DNR_UGS_GWDATAHUB_DEV }}
          projectId: ut-dnr-ugs-gwdatahub-dev
          channelId: preview