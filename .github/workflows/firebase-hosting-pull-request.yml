name: Build and Deploy to Firebase Preview
on: pull_request
permissions:
  checks: write
  contents: read
  pull-requests: write
jobs:
  Build-and-Deploy:
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Download Experience Builder
        run: curl -o exb.zip "$(curl -s 'https://downloads.arcgis.com/dms/rest/download/secured/arcgis-experience-builder-1.15.zip?f=json&folder=software%2FExperienceBuilder%2F1.15' | python3 -c "import sys, json; print(json.load(sys.stdin)['url'])")"
      - name: Unzip Experience Builder
        run: unzip -q exb.zip -d exb
      # - name: Copy Custom Widgets
      # run: cp -r widgets/* exb/ArcGISExperienceBuilder/client/your-extensions/widgets
      - name: Copy Custom Themes
        run: cp -r themes/* exb/ArcGISExperienceBuilder/client/your-extensions/themes
      - name: Create App directory
        run: mkdir public && cd public && mkdir apps && cd apps
        working-directory: exb/ArcGISExperienceBuilder/server
      - name: Copy apps
        run: cp -r apps/* exb/ArcGISExperienceBuilder/server/public/apps
      - name: NPM install client folder
        run: npm ci
        working-directory: exb/ArcGISExperienceBuilder/client
      - name: NPM install in server folder
        run: npm ci
        working-directory: exb/ArcGISExperienceBuilder/server
      - name: Build widgets - dev
        run: npm run build:dev
        working-directory: exb/ArcGISExperienceBuilder/client
      - name: Build widgets
        run: npm run build:prod
        working-directory: exb/ArcGISExperienceBuilder/client
      - name: Run download script
        run: |
          node -e "require('./server/src/middlewares/dev/apps/app-download.js').zipApp('0', 'app.zip')"
          ls -la  # This will show where the file is created
        working-directory: exb/ArcGISExperienceBuilder
        env:
          NODE_ENV: production
      - name: Unzip app zip
        run: |
          unzip -o -q app.zip -d app
          chmod -R 777 app
        working-directory: exb/ArcGISExperienceBuilder

      - name: Add analytics script to HTML file
        run: |
          # Find the main index.html
          find exb/ArcGISExperienceBuilder/app -type f -name "*.html" | xargs grep -l "<title>Utah Groundwater Data Hub</title>" > /tmp/index_files.txt
          
          if [ ! -s /tmp/index_files.txt ]; then
            echo "❌ Could not find the main HTML file with title 'Utah Groundwater Data Hub'"
            echo "Searching for any index.html files instead:"
            find exb/ArcGISExperienceBuilder/app -name "index.html" | head -5
            exit 1
          fi
          
          # Get the first matching file
          HTML_FILE=$(head -1 /tmp/index_files.txt)
          echo "Found main HTML file at: $HTML_FILE"
          
          # Create backup
          cp "$HTML_FILE" "${HTML_FILE}.bak"
          
          # Add analytics code between meta tags and style tag
          GA_SCRIPT='<!-- Google tag (gtag.js) -->\n<script async src="https://www.googletagmanager.com/gtag/js?id='${GA_ID}'"></script>\n<script>\n  window.dataLayer = window.dataLayer || [];\n  function gtag(){dataLayer.push(arguments);}\n  gtag("js", new Date());\n\n  gtag("config", "'${GA_ID}'");\n</script>\n<!-- Google Tag Manager -->\n<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({"gtm.start":\nnew Date().getTime(),event:"gtm.js"});var f=d.getElementsByTagName(s)[0],\nj=d.createElement(s),dl=l!="dataLayer"?"&l="+l:"";j.async=true;j.src=\n"https://www.googletagmanager.com/gtm.js?id="+i+dl;f.parentNode.insertBefore(j,f);\n})(window,document,"script","dataLayer","'${GTM_ID}'");</script>\n<!-- End Google Tag Manager -->'
          
          GTM_BODY='<!-- Google Tag Manager (noscript) -->\n<noscript><iframe src="https://www.googletagmanager.com/ns.html?id='${GTM_ID}'"\nheight="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>\n<!-- End Google Tag Manager (noscript) -->'
          
          # First, add the GTM body code after the opening body tag but before the first div
          perl -i -pe 's|(<body>)(.+?<div)|$1\n'"$GTM_BODY"'\n$2|s' "$HTML_FILE"
          
          # Now add the GA/GTM head code after the base tag but before the style tag
          perl -i -pe 's|(<base href="./cdn/\d+/"/>)(<style>)|$1\n'"$GA_SCRIPT"'\n$2|s' "$HTML_FILE"
          
          # Verify the changes
          if grep -q "${GA_ID}" "$HTML_FILE" && grep -q "${GTM_ID}" "$HTML_FILE"; then
            grep -A 2 "Google tag" "$HTML_FILE"
            grep -A 2 "Google Tag Manager (noscript)" "$HTML_FILE"
            echo "✅ Analytics successfully added to HTML file"
            rm "${HTML_FILE}.bak"
          else
            echo "❌ Failed to add analytics, restoring backup"
            mv "${HTML_FILE}.bak" "$HTML_FILE"
            exit 1
          fi
        env:
          GTM_ID: ${{ secrets.GTM_ID }}
          GA_ID: ${{ secrets.GA_ID }}

      - name: Deploy to Firebase Preview Channel
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_UT_DNR_UGS_GWDATAHUB_DEV }}
          projectId: ut-dnr-ugs-gwdatahub-dev
          channelId: preview