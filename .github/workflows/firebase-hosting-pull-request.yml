name: Build and Deploy to Firebase Preview
on: pull_request
permissions:
  checks: write
  contents: read
  pull-requests: write
jobs:
  Build-and-Deploy:
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Download Experience Builder
        run: curl -o exb.zip "$(curl -s 'https://downloads.arcgis.com/dms/rest/download/secured/arcgis-experience-builder-1.15.zip?f=json&folder=software%2FExperienceBuilder%2F1.15' | python3 -c "import sys, json; print(json.load(sys.stdin)['url'])")"
      - name: Unzip Experience Builder
        run: unzip -q exb.zip -d exb
      # - name: Copy Custom Widgets
      # run: cp -r widgets/* exb/ArcGISExperienceBuilder/client/your-extensions/widgets
      - name: Copy Custom Themes
        run: cp -r themes/* exb/ArcGISExperienceBuilder/client/your-extensions/themes
      - name: Create App directory
        run: mkdir public && cd public && mkdir apps && cd apps
        working-directory: exb/ArcGISExperienceBuilder/server
      - name: Copy apps
        run: cp -r apps/* exb/ArcGISExperienceBuilder/server/public/apps
      - name: NPM install client folder
        run: npm ci
        working-directory: exb/ArcGISExperienceBuilder/client
      - name: NPM install in server folder
        run: npm ci
        working-directory: exb/ArcGISExperienceBuilder/server
      - name: Build widgets - dev
        run: npm run build:dev
        working-directory: exb/ArcGISExperienceBuilder/client
      - name: Build widgets
        run: npm run build:prod
        working-directory: exb/ArcGISExperienceBuilder/client
      - name: Run download script
        run: |
          node -e "require('./server/src/middlewares/dev/apps/app-download.js').zipApp('0', 'app.zip')"
          ls -la  # This will show where the file is created
        working-directory: exb/ArcGISExperienceBuilder
        env:
          NODE_ENV: production
      - name: Unzip app zip
        run: |
          unzip -o -q app.zip -d app
          chmod -R 777 app
        working-directory: exb/ArcGISExperienceBuilder

      - name: Find the main index.html file
        run: |
          # First, find all index.html files
          find exb/ArcGISExperienceBuilder/app -name "index.html" > all_index_files.txt
          cat all_index_files.txt
          echo "Found $(wc -l < all_index_files.txt) index.html files"
          
          # Now look for the main one (without 'unsupported-browser' in the path)
          grep -v "unsupported-browser" all_index_files.txt > main_index_files.txt
          
          if [ -s main_index_files.txt ]; then
            MAIN_INDEX=$(head -1 main_index_files.txt)
            echo "Found main index.html at: $MAIN_INDEX"
          else
            echo "Could not find main index.html, using first one"
            MAIN_INDEX=$(head -1 all_index_files.txt)
          fi
          
          echo "MAIN_INDEX=$MAIN_INDEX" >> $GITHUB_ENV
          
          # Display the start of the file for verification
          echo "First 10 lines of $MAIN_INDEX:"
          head -10 "$MAIN_INDEX"
      
      # Direct injection of analytics code
      - name: Inject analytics code
        run: |
          # Create a backup
          cp "$MAIN_INDEX" "$MAIN_INDEX.bak"
          
          # Analytics code to inject
          HEAD_SCRIPT="<!-- Google tag (gtag.js) -->\n<script async src=\"https://www.googletagmanager.com/gtag/js?id=$GA_ID\"></script>\n<script>\n  window.dataLayer = window.dataLayer || [];\n  function gtag(){dataLayer.push(arguments);}\n  gtag('js', new Date());\n\n  gtag('config', '$GA_ID');\n</script>\n<!-- Google Tag Manager -->\n<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\nnew Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],\nj=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\n'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);\n})(window,document,'script','dataLayer','$GTM_ID');</script>\n<!-- End Google Tag Manager -->"
          
          BODY_SCRIPT="<!-- Google Tag Manager (noscript) -->\n<noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=$GTM_ID\"\nheight=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n<!-- End Google Tag Manager (noscript) -->"
          
          # Use direct file replacement with explicit EOF
          awk -v head_script="$HEAD_SCRIPT" -v body_script="$BODY_SCRIPT" '
          /<head>/ { print; print head_script; next }
          /<body>/ { print; print body_script; next }
          { print }
          ' "$MAIN_INDEX.bak" > "$MAIN_INDEX.new"
          
          mv "$MAIN_INDEX.new" "$MAIN_INDEX"
          
          # Verify the changes
          echo "Checking for analytics code in the modified file:"
          grep -A 3 "Google tag" "$MAIN_INDEX" || echo "Google tag not found!"
          grep -A 3 "Google Tag Manager" "$MAIN_INDEX" || echo "Google Tag Manager not found!"
          
          # Display beginning of the file
          echo "First 20 lines of modified file:"
          head -20 "$MAIN_INDEX"
        env:
          GTM_ID: ${{ secrets.GTM_ID }}
          GA_ID: ${{ secrets.GA_ID }}

      - name: Deploy to Firebase Preview Channel
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_UT_DNR_UGS_GWDATAHUB_DEV }}
          projectId: ut-dnr-ugs-gwdatahub-dev
          channelId: preview